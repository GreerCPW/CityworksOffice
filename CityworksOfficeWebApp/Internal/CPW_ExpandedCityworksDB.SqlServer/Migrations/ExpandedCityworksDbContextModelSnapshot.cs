// <auto-generated />
using CPW_ExpandedCityworksDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPW_ExpandedCityworksDB.SqlServer.Migrations
{
    [DbContext(typeof(ExpandedCityworksDbContext))]
    partial class ExpandedCityworksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CPW_ExpandedCityworksDB.ExpandedFeeEntity", b =>
                {
                    b.Property<decimal>("FeeID")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<decimal>("CaseID")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeAmount")
                        .HasPrecision(22, 4)
                        .HasColumnType("decimal(22,4)");

                    b.Property<string>("FeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeeRegistered")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(38, 2)
                        .HasColumnType("decimal(38,2)");

                    b.HasKey("FeeID");

                    b.ToTable((string)null);

                    b.ToView("ExpandedFees", (string)null);
                });

            modelBuilder.Entity("CPW_ExpandedCityworksDB.ExpandedReceivableLineItemEntity", b =>
                {
                    b.Property<int>("LineItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountDue")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("CaseID")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FeeID")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("GlAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceivableID")
                        .HasColumnType("int");

                    b.HasKey("LineItemID");

                    b.ToTable((string)null);

                    b.ToView("ExpandedReceivableLineItems", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
